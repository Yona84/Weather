{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/weather-app/src/App.js\";\nimport React from 'react';\nimport { fetchData, fetchForecast } from './actions/';\nimport { css } from 'emotion';\nimport { connect } from 'react-redux';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport WeatherDetails from './components/WeatherDetails';\nimport WeatherDetailsHourly from './components/WeatherDetailsHourly';\n\nconst App = props => {\n  const [firstSlideToSlice, setFirstSlideToSlice] = React.useState(0);\n  const [lastSlideToSlice, setLastSlideToSlice] = React.useState(3);\n  React.useEffect(() => {\n    props.fetchData();\n    props.fetchForecast();\n  }, []);\n\n  if (props.loader) {\n    return /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    className: styles.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, props.data && props.data.map((city, key) => {\n    return /*#__PURE__*/React.createElement(WeatherDetails, {\n      key: key,\n      data: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" Hourly \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    className: styles.icon({\n      disabled: firstSlideToSlice === 0\n    }),\n    onClick: () => {\n      setFirstSlideToSlice(firstSlideToSlice - 3);\n      setLastSlideToSlice(lastSlideToSlice - 3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \" See Earlier\"), props.forecast && props.forecast.slice(firstSlideToSlice, lastSlideToSlice).map((city, key) => {\n    return /*#__PURE__*/React.createElement(WeatherDetailsHourly, {\n      key: key,\n      data: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    className: styles.icon({\n      disabled: lastSlideToSlice === (props.forecast && props.forecast.length)\n    }),\n    onClick: () => {\n      setFirstSlideToSlice(firstSlideToSlice + 3);\n      setLastSlideToSlice(lastSlideToSlice + 3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \" See Later\")));\n};\n\nconst styles = {\n  paper: css({\n    '&.MuiPaper-root': {\n      backgroundColor: '#1d1d1d',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      flexDirection: 'column',\n      height: '100vh'\n    }\n  }),\n  flex: css({\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  }),\n  icon: ({\n    disabled\n  }) => css({\n    '&.MuiSvgIcon-root': {\n      color: 'white',\n      opacity: disabled ? 0.3 : 1,\n      fontSize: '3.5rem',\n      cursor: 'pointer',\n      pointerEvents: disabled ? 'none' : 'auto'\n    }\n  }),\n  title: css({\n    color: 'white',\n    opacity: 0.87,\n    fontSize: 32\n  })\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data.data,\n    loader: state.data.loader,\n    forecast: state.forecast.forecast\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData,\n  fetchForecast\n})(App);","map":{"version":3,"sources":["/Users/yonatanronen/dev/weather-app/src/App.js"],"names":["React","fetchData","fetchForecast","css","connect","ChevronLeftIcon","ChevronRightIcon","Paper","CircularProgress","WeatherDetails","WeatherDetailsHourly","App","props","firstSlideToSlice","setFirstSlideToSlice","useState","lastSlideToSlice","setLastSlideToSlice","useEffect","loader","styles","paper","data","map","city","key","title","flex","icon","disabled","forecast","slice","length","backgroundColor","display","width","alignItems","flexDirection","height","color","opacity","fontSize","cursor","pointerEvents","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAErB,QAAM,CAAEC,iBAAF,EAAqBC,oBAArB,IAA8Cd,KAAK,CAACe,QAAN,CAAe,CAAf,CAApD;AACA,QAAM,CAAEC,gBAAF,EAAoBC,mBAApB,IAA4CjB,KAAK,CAACe,QAAN,CAAe,CAAf,CAAlD;AAEAf,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,KAAK,CAACX,SAAN;AACAW,IAAAA,KAAK,CAACV,aAAN;AACD,GAHD,EAGG,EAHH;;AAKA,MAAKU,KAAK,CAACO,MAAX,EAAoB;AAClB,wBAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AACO,IAAA,SAAS,EAAEC,MAAM,CAACC,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIT,KAAK,CAACU,IAAN,IAAcV,KAAK,CAACU,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAMC,GAAN,KAAc;AACzC,wBACE,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,GAArB;AAA0B,MAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJa,CAHlB,eASE;AAAI,IAAA,SAAS,EAAEJ,MAAM,CAACM,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACO,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AACA,IAAA,SAAS,EAAEP,MAAM,CAACQ,IAAP,CAAY;AAAEC,MAAAA,QAAQ,EAAEhB,iBAAiB,KAAK;AAAlC,KAAZ,CADX;AAEE,IAAA,OAAO,EAAE,MAAM;AACfC,MAAAA,oBAAoB,CAACD,iBAAiB,GAAG,CAArB,CAApB;AACAI,MAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EASIJ,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeC,KAAf,CAAqBlB,iBAArB,EAAwCG,gBAAxC,EAA0DO,GAA1D,CAA8D,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7F,wBACE,oBAAC,oBAAD;AAAsB,MAAA,GAAG,EAAEA,GAA3B;AAAgC,MAAA,IAAI,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJiB,CATtB,eAeE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEJ,MAAM,CAACQ,IAAP,CAAY;AAAEC,MAAAA,QAAQ,EAAEb,gBAAgB,MAAMJ,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeE,MAAvC;AAA5B,KAAZ,CADb;AAEE,IAAA,OAAO,EAAE,MAAM;AACflB,MAAAA,oBAAoB,CAACD,iBAAiB,GAAG,CAArB,CAApB;AACAI,MAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACD,KALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CAVF,CADF;AAoCD,CAjDD;;AAmDA,MAAMI,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAElB,GAAG,CAAC;AACT,uBAAmB;AACjB8B,MAAAA,eAAe,EAAE,SADA;AAEjBC,MAAAA,OAAO,EAAE,MAFQ;AAGjBC,MAAAA,KAAK,EAAE,MAHU;AAIjBC,MAAAA,UAAU,EAAE,QAJK;AAKjBC,MAAAA,aAAa,EAAE,QALE;AAMjBC,MAAAA,MAAM,EAAE;AANS;AADV,GAAD,CADG;AAWbX,EAAAA,IAAI,EAAExB,GAAG,CAAC;AACR+B,IAAAA,OAAO,EAAE,MADD;AAERE,IAAAA,UAAU,EAAE,QAFJ;AAGRD,IAAAA,KAAK,EAAE;AAHC,GAAD,CAXI;AAgBbP,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB1B,GAAG,CAAC;AAC1B,yBAAqB;AACnBoC,MAAAA,KAAK,EAAE,OADY;AAEnBC,MAAAA,OAAO,EAAEX,QAAQ,GAAG,GAAH,GAAS,CAFP;AAGnBY,MAAAA,QAAQ,EAAE,QAHS;AAInBC,MAAAA,MAAM,EAAE,SAJW;AAKnBC,MAAAA,aAAa,EAAEd,QAAQ,GAAG,MAAH,GAAY;AALhB;AADK,GAAD,CAhBd;AAyBbH,EAAAA,KAAK,EAAEvB,GAAG,CAAC;AACToC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,OAAO,EAAE,IAFA;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GAAD;AAzBG,CAAf;;AAgCA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLvB,IAAAA,IAAI,EAAEuB,KAAK,CAACvB,IAAN,CAAWA,IADZ;AAELH,IAAAA,MAAM,EAAE0B,KAAK,CAACvB,IAAN,CAAWH,MAFd;AAGLW,IAAAA,QAAQ,EAAEe,KAAK,CAACf,QAAN,CAAeA;AAHpB,GAAP;AAKD,CAND;;AAQA,eAAe1B,OAAO,CACpBwC,eADoB,EAEpB;AAAE3C,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAFoB,CAAP,CAIdS,GAJc,CAAf","sourcesContent":["import React from 'react';\nimport { fetchData, fetchForecast } from './actions/';\nimport { css } from 'emotion';\nimport { connect } from 'react-redux';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport WeatherDetails from './components/WeatherDetails';\nimport WeatherDetailsHourly from './components/WeatherDetailsHourly';\n\nconst App = (props) => {\n\n  const [ firstSlideToSlice, setFirstSlideToSlice ] = React.useState(0);\n  const [ lastSlideToSlice, setLastSlideToSlice ] = React.useState(3);\n\n  React.useEffect(() => {\n    props.fetchData();\n    props.fetchForecast();\n  }, []);\n\n  if ( props.loader ) {\n    return <CircularProgress />\n  }\n  return (\n    <Paper elevation={1}\n           className={styles.paper}>\n      {\n        props.data && props.data.map((city,key) => {\n          return (\n            <WeatherDetails key={key} data={city}/>\n          );\n        })\n      }\n      <h1 className={styles.title}> Hourly </h1>\n      <div className={styles.flex}>\n          <ChevronLeftIcon\n          className={styles.icon({ disabled: firstSlideToSlice === 0 })}\n            onClick={() => {\n            setFirstSlideToSlice(firstSlideToSlice - 3);\n            setLastSlideToSlice(lastSlideToSlice - 3);\n          }}> See Earlier\n          </ChevronLeftIcon>\n        {\n          props.forecast && props.forecast.slice(firstSlideToSlice, lastSlideToSlice).map((city, key) => {\n            return (\n              <WeatherDetailsHourly key={key} data={city}/>\n            );\n          })\n        }\n        <ChevronRightIcon\n          className={styles.icon({ disabled: lastSlideToSlice === (props.forecast && props.forecast.length) })}\n          onClick={() => {\n          setFirstSlideToSlice(firstSlideToSlice + 3);\n          setLastSlideToSlice(lastSlideToSlice + 3);\n        }}> See Later\n        </ChevronRightIcon>\n      </div>\n    </Paper>\n  );\n};\n\nconst styles = {\n  paper: css({\n    '&.MuiPaper-root': {\n      backgroundColor: '#1d1d1d',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      flexDirection: 'column',\n      height: '100vh'\n    }\n  }),\n  flex: css({\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  }),\n  icon: ({ disabled }) => css({\n    '&.MuiSvgIcon-root': {\n      color: 'white',\n      opacity: disabled ? 0.3 : 1,\n      fontSize: '3.5rem',\n      cursor: 'pointer',\n      pointerEvents: disabled ? 'none' : 'auto',\n    }\n  }),\n  title: css({\n    color: 'white',\n    opacity: 0.87,\n    fontSize: 32,\n  }),\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data.data,\n    loader: state.data.loader,\n    forecast: state.forecast.forecast\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchData, fetchForecast },\n)\n(App);\n"]},"metadata":{},"sourceType":"module"}